#+SETUPFILE: "~/org/personal-web-site/_org-setupfiles/level-1.org"
#+STARTUP: showall
#+HTML_LINK_UP: index.html
#+COMMENT: C-c C-e P p
#+TITLE: Setting up Let's Encrypt certs



* Introduction
Instead of using self-signed certificates, I use the *free* certificates
made available via the [[https://letsencrypt.org/][Let's Encrypt]] Certificate Authority.  It is an
excellent site and getting the certificates was one of the easiest
things I have ever done.  Did I mention it is *free* ? 

There is a plethora of client tools available to help automate the process.
I have used [[https://dehydrated.io/][dehydrated]] since it is a shell script, hence can run on any Unix system,
and it has support for *TLS-ALPN-01* verification challenges.  

** Requirements

   - Automated renewal
   - Use TLS-ALPN-01 for verification
   - Same certificates for all services (web, mail, database, etc.)
   - Accessible from within jails as well as on host system

** Prerequisites
Since we will be using =tls-alpn-01= for verification, a web server running on
port 443 is required.


* Installation

Since [[https://dehydrated.io/][dehydrated]] is written using [[https://www.gnu.org/software/bash/][Bash]] there are minimal external dependencies

#+BEGIN_SRC csh
  tcsh% pkg search -d security/dehydrated
  security/dehydrated
  Comment        : Pure BASH/ZSH Lets Encrypt client
  Depends on     :
          bash-5.2_3
          curl-7.85.0
#+END_SRC


The installation is simple enough with everything getting installed under =/usr/local=

#+BEGIN_SRC csh
  tcsh% sudo pkg install dehydrated

  tcsh% pkg list security/dehydrated
  /usr/local/bin/dehydrated
  /usr/local/etc/dehydrated/config.sample
  /usr/local/etc/dehydrated/domains.txt.sample
  /usr/local/etc/dehydrated/hook.sh.sample
  /usr/local/etc/periodic/weekly/000.dehydrated
  /usr/local/man/man1/dehydrated.1.gz
  /usr/local/share/doc/dehydrated/README.md
  /usr/local/share/doc/dehydrated/dns-verification.md
  /usr/local/share/doc/dehydrated/domains_txt.md
  /usr/local/share/doc/dehydrated/ecc.md
  /usr/local/share/doc/dehydrated/hook_chain.md
  /usr/local/share/doc/dehydrated/per-certificate-config.md
  /usr/local/share/doc/dehydrated/staging.md
  /usr/local/share/doc/dehydrated/tls-alpn.md
  /usr/local/share/doc/dehydrated/troubleshooting.md
  /usr/local/share/doc/dehydrated/wellknown.md
  /usr/local/share/licenses/dehydrated-0.7.0/LICENSE
  /usr/local/share/licenses/dehydrated-0.7.0/MIT
  /usr/local/share/licenses/dehydrated-0.7.0/catalog.mk
#+END_SRC

* Configuration

First, lets make a copy of the sample files provided so that we have something to
work with

#+BEGIN_SRC csh
  tcsh% cd /usr/local/etc/dehydrated
  tcsh% sudo cp -av config.sample config
  tcsh% sudo cp -av domains.txt.sample domains.txt
#+END_SRC

** =domains.txt= file
The first thing to do is edit the =domains.txt= file so that we have the correct domains
setup before we start experimenting with the config file and doing test runs.


All you need is a single line in the file

#+begin_example
# Create certificate for 'example.org' with an alternative name of
# 'www.example.org'. It will be stored in the directory ${CERT_DIR}/example.org
example.org www.example.org smtp.example.org mail.example.org
#+end_example

For every domain/sub-domain that you want a certificate, list it on a
line by itself.  Sharing a certificate across multiple sub-domains can
make certificate management easier but it comes at a price.  If the
certificate is compromised then all the subdomains will need to be
updated.   Using separate certificates will help narrow the scope of
the compromise.

Because I want to use ~tls-alpn-01~ for certificate validation, I can
not use a wildcard domain.

You can add as many subdomains as you want, I do not believe there is a limit on that.

Now that we have =domains.txt= setup, lets move on to the =config= file.

** =config= file

Most of the defaults are pretty sane in the file.  I changed the following

#+begin_example
CA="letsencrypt-test"
CHALLENGETYPE="tls-alpn-01"
BASEDIR="/usr/local/etc/dehydrated"
CERTDIR="/usr/local/etc/ssl"
ALPNCERTDIR="/usr/local/www/tls-alpn-01"
#+end_example

Once we're done testing the configuration, the =CA= will need to be changed
to not use the testing authority.

** Directories and permissions
The two main directories that are needed for certificates and certificate
renewal are =/usr/local/etc/ssl= and =/usr/local/www/tls-alpn-01=.  Both of
the directories need to be similar to the following:

#+begin_example
  drwxr-xr-x  5 root   wheel      13 Jan  8 01:28 /usr/local/etc/ssl
  drwxr-xr-x  2 www    www         2 Jan 21 04:23 /usr/local/www/tls-alpn-01
#+end_example


* First run

* Automating renewals


* Security Certificates


* Lighttpd





* Resources

  - https://cipherli.st
  - http://angelo.mandato.com/2017/03/07/lets-encrypt-ubuntu-apache-nginx-lighttpd-cheat-sheet/
  - https://github.com/dehydrated-io/dehydrated
  - https://github.com/dehydrated-io/dehydrated/blob/master/docs/tls-alpn.md
  - https://github.com/dehydrated-io/dehydrated/blob/master/docs/domains_txt.md
  - https://redmine.lighttpd.net/projects/lighttpd/wiki/HowToSimpleSSL

